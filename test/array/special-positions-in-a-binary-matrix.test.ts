import { numSpecial } from '../../src/array/special-positions-in-a-binary-matrix'

test('二进制矩阵中的特殊位置', () => {
  // 示例 1：
  // 输入：mat = [[1,0,0],
  //             [0,0,1],
  //             [1,0,0]]
  // 输出：1
  // 解释：(1,2) 是一个特殊位置，因为 mat[1][2] == 1 且所处的行和列上所有其他元素都是 0
  expect(
    numSpecial([
      [1, 0, 0],
      [0, 0, 1],
      [1, 0, 0]
    ])
  ).toBe(1)

  // 示例 2：
  // 输入：mat = [[1,0,0],
  //             [0,1,0],
  //             [0,0,1]]
  // 输出：3
  // 解释：(0,0), (1,1) 和 (2,2) 都是特殊位置
  expect(
    numSpecial([
      [1, 0, 0],
      [0, 1, 0],
      [0, 0, 1]
    ])
  ).toBe(3)

  // 示例 3：

  // 示例 3：
  // 输入：mat = [[0,0,0,1],
  //             [1,0,0,0],
  //             [0,1,1,0],
  //             [0,0,0,0]]
  // 输出：2
  expect(
    numSpecial([
      [0, 0, 0, 1],
      [1, 0, 0, 0],
      [0, 1, 1, 0],
      [0, 0, 0, 0]
    ])
  ).toBe(2)

  // 示例 4：
  // 输入：mat = [[0,0,0,0,0],
  //             [1,0,0,0,0],
  //             [0,1,0,0,0],
  //             [0,0,1,0,0],
  //             [0,0,0,1,1]]
  // 输出：3
  expect(
    numSpecial([
      [0, 0, 0, 0, 0],
      [1, 0, 0, 0, 0],
      [0, 1, 0, 0, 0],
      [0, 0, 1, 0, 0],
      [0, 0, 0, 1, 1]
    ])
  ).toBe(3)

  expect(numSpecial([[0, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0]])).toBe(2)
})
